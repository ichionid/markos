(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{439:function(t,e,r){"use strict";r.r(e);r(43),r(36),r(42),r(18),r(56),r(37),r(57);var n=r(26);r(51);function o(object,t){var e=Object.keys(object);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(object);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(object,t).enumerable}))),e.push.apply(e,r)}return e}function c(t){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?o(Object(source),!0).forEach((function(e){Object(n.a)(t,e,source[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(source)):o(Object(source)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(source,e))}))}return t}var l={name:"DruxtViewsSorts",extends:r(160).default,props:{options:{type:Object,default:function(){return{}}},sorts:{type:Array,default:function(){return[]}},type:{type:String,default:"basic"}},watch:{model:function(t,e){t!==e&&this.$emit("input",this.model)}},methods:{sortBy:function(t){return{query:c(c({},this.$route.query),{sort:t.id})}}},druxt:{componentOptions:function(t){return[[t.type],["default"]]},propsData:function(t){var e=t.model;return{options:t.options,sorts:t.sorts,type:t.type,value:e}},slots:function(t){var e=this,r=this;return{default:function(){return t("div",[t("strong",[e.options.exposed_sorts_label]),t("ul",e.sorts.map((function(n){return t("li",[t("NuxtLink",{nativeOn:{click:function(){r.model=n.id}},props:{to:e.sortBy(n)}},[n.expose.label])])})))])}}}}},f=r(29),component=Object(f.a)(l,undefined,undefined,!1,null,null,null);e.default=component.exports}}]);