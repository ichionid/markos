(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{437:function(e,t,r){"use strict";r.r(t);r(43),r(36),r(42),r(18),r(56),r(37),r(57);var n=r(26);r(51);function o(object,e){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(object);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),t.push.apply(t,r)}return t}function f(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?o(Object(source),!0).forEach((function(t){Object(n.a)(e,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):o(Object(source)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(source,t))}))}return e}var c={name:"DruxtViewsFilters",extends:r(160).default,props:{filters:{type:Array,required:!0},options:{type:Object,default:function(){return{}}},type:{type:String,default:"basic"},value:{type:Object,default:function(){return{}}}},druxt:{componentOptions:function(e){return[[e.type],["default"]]},propsData:function(e){var t=e.options,r=e.filters,n=e.model;return{options:t,filters:r,type:e.type,value:n}},slots:function(e){var t=this,r={};return this.filters.map((function(filter){r[filter.expose.identifier]=function(r){return e("DruxtViewsFilter",{attrs:f(f({},r),t.$attrs),props:{filter:filter,value:t.model[filter.expose.identifier]},ref:filter.expose.identifier,on:{input:function(e){t.model=f(f({},t.model),{},Object(n.a)({},filter.expose.identifier,e))}}})}})),r.default=function(e){return t.filters.map((function(filter){return r[filter.expose.identifier](e)}))},r}}},l=r(29),component=Object(l.a)(c,undefined,undefined,!1,null,null,null);t.default=component.exports}}]);